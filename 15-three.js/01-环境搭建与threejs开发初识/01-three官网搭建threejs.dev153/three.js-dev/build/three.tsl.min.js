/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
import{TSL as e}from"three/webgpu";const t=e.BRDF_GGX,r=e.BRDF_Lambert,a=e.BasicShadowFilter,o=e.Break,i=e.Continue,n=e.DFGApprox,l=e.D_GGX,s=e.Discard,c=e.EPSILON,m=e.F_Schlick,p=e.Fn,d=e.INFINITY,u=e.If,g=e.Loop,h=e.NodeShaderStage,x=e.NodeType,f=e.NodeUpdateType,b=e.NodeAccess,w=e.PCFShadowFilter,v=e.PCFSoftShadowFilter,S=e.PI,T=e.PI2,_=e.Return,V=e.Schlick_to_F0,y=e.ScriptableNodeResources,M=e.ShaderNode,D=e.TBNViewMatrix,F=e.VSMShadowFilter,C=e.V_GGX_SmithCorrelated,I=e.abs,N=e.acesFilmicToneMapping,P=e.acos,R=e.add,B=e.addMethodChaining,k=e.addNodeElement,L=e.agxToneMapping,A=e.all,G=e.alphaT,O=e.and,W=e.anisotropy,j=e.anisotropyB,U=e.anisotropyT,z=e.any,E=e.append,q=e.arrayBuffer,Z=e.asin,X=e.assign,Y=e.atan,H=e.atan2,J=e.atomicAdd,K=e.atomicAnd,Q=e.atomicFunc,$=e.atomicMax,ee=e.atomicMin,te=e.atomicOr,re=e.atomicStore,ae=e.atomicSub,oe=e.atomicXor,ie=e.attenuationColor,ne=e.attenuationDistance,le=e.attribute,se=e.attributeArray,ce=e.backgroundBlurriness,me=e.backgroundIntensity,pe=e.backgroundRotation,de=e.batch,ue=e.billboarding,ge=e.bitAnd,he=e.bitNot,xe=e.bitOr,fe=e.bitXor,be=e.bitangentGeometry,we=e.bitangentLocal,ve=e.bitangentView,Se=e.bitangentWorld,Te=e.bitcast,_e=e.blendBurn,Ve=e.blendColor,ye=e.blendDodge,Me=e.blendOverlay,De=e.blendScreen,Fe=e.blur,Ce=e.bool,Ie=e.buffer,Ne=e.bufferAttribute,Pe=e.bumpMap,Re=e.burn,Be=e.bvec2,ke=e.bvec3,Le=e.bvec4,Ae=e.bypass,Ge=e.cache,Oe=e.call,We=e.cameraFar,je=e.cameraNear,Ue=e.cameraNormalMatrix,ze=e.cameraPosition,Ee=e.cameraProjectionMatrix,qe=e.cameraProjectionMatrixInverse,Ze=e.cameraViewMatrix,Xe=e.cameraWorldMatrix,Ye=e.cbrt,He=e.cdl,Je=e.ceil,Ke=e.checker,Qe=e.cineonToneMapping,$e=e.clamp,et=e.clearcoat,tt=e.clearcoatRoughness,rt=e.code,at=e.color,ot=e.colorSpaceToWorking,it=e.colorToDirection,nt=e.compute,lt=e.cond,st=e.context,ct=e.convert,mt=e.convertColorSpace,pt=e.convertToTexture,dt=e.cos,ut=e.cross,gt=e.cubeTexture,ht=e.dFdx,xt=e.dFdy,ft=e.dashSize,bt=e.defaultBuildStages,wt=e.defaultShaderStages,vt=e.defined,St=e.degrees,Tt=e.deltaTime,_t=e.densityFog,Vt=e.densityFogFactor,yt=e.depth,Mt=e.depthPass,Dt=e.difference,Ft=e.diffuseColor,Ct=e.directPointLight,It=e.directionToColor,Nt=e.dispersion,Pt=e.distance,Rt=e.div,Bt=e.dodge,kt=e.dot,Lt=e.drawIndex,At=e.dynamicBufferAttribute,Gt=e.element,Ot=e.emissive,Wt=e.equal,jt=e.equals,Ut=e.equirectUV,zt=e.exp,Et=e.exp2,qt=e.expression,Zt=e.faceDirection,Xt=e.faceForward,Yt=e.float,Ht=e.floor,Jt=e.fog,Kt=e.fract,Qt=e.frameGroup,$t=e.frameId,er=e.frontFacing,tr=e.fwidth,rr=e.gain,ar=e.gapSize,or=e.getConstNodeType,ir=e.getCurrentStack,nr=e.getDirection,lr=e.getDistanceAttenuation,sr=e.getGeometryRoughness,cr=e.getNormalFromDepth,mr=e.getParallaxCorrectNormal,pr=e.getRoughness,dr=e.getScreenPosition,ur=e.getShIrradianceAt,gr=e.getTextureIndex,hr=e.getViewPosition,xr=e.glsl,fr=e.glslFn,br=e.grayscale,wr=e.greaterThan,vr=e.greaterThanEqual,Sr=e.hash,Tr=e.highpModelNormalViewMatrix,_r=e.highpModelViewMatrix,Vr=e.hue,yr=e.instance,Mr=e.instanceIndex,Dr=e.instancedArray,Fr=e.instancedBufferAttribute,Cr=e.instancedDynamicBufferAttribute,Ir=e.instancedMesh,Nr=e.int,Pr=e.inverseSqrt,Rr=e.invocationLocalIndex,Br=e.invocationSubgroupIndex,kr=e.ior,Lr=e.iridescence,Ar=e.iridescenceIOR,Gr=e.iridescenceThickness,Or=e.ivec2,Wr=e.ivec3,jr=e.ivec4,Ur=e.js,zr=e.label,Er=e.length,qr=e.lengthSq,Zr=e.lessThan,Xr=e.lessThanEqual,Yr=e.lightPosition,Hr=e.lightTargetDirection,Jr=e.lightTargetPosition,Kr=e.lightViewPosition,Qr=e.lightingContext,$r=e.lights,ea=e.linearDepth,ta=e.linearToneMapping,ra=e.localId,aa=e.log,oa=e.log2,ia=e.logarithmicDepthToViewZ,na=e.loop,la=e.luminance,sa=e.mediumpModelViewMatrix,ca=e.mat2,ma=e.mat3,pa=e.mat4,da=e.matcapUV,ua=e.materialAOMap,ga=e.materialAlphaTest,ha=e.materialAnisotropy,xa=e.materialAnisotropyVector,fa=e.materialAttenuationColor,ba=e.materialAttenuationDistance,wa=e.materialClearcoat,va=e.materialClearcoatNormal,Sa=e.materialClearcoatRoughness,Ta=e.materialColor,_a=e.materialDispersion,Va=e.materialEmissive,ya=e.materialIOR,Ma=e.materialIridescence,Da=e.materialIridescenceIOR,Fa=e.materialIridescenceThickness,Ca=e.materialLightMap,Ia=e.materialLineDashOffset,Na=e.materialLineDashSize,Pa=e.materialLineGapSize,Ra=e.materialLineScale,Ba=e.materialLineWidth,ka=e.materialMetalness,La=e.materialNormal,Aa=e.materialOpacity,Ga=e.materialPointWidth,Oa=e.materialReference,Wa=e.materialReflectivity,ja=e.materialRefractionRatio,Ua=e.materialRotation,za=e.materialRoughness,Ea=e.materialSheen,qa=e.materialSheenRoughness,Za=e.materialShininess,Xa=e.materialSpecular,Ya=e.materialSpecularColor,Ha=e.materialSpecularIntensity,Ja=e.materialSpecularStrength,Ka=e.materialThickness,Qa=e.materialTransmission,$a=e.max,eo=e.maxMipLevel,to=e.metalness,ro=e.min,ao=e.mix,oo=e.mixElement,io=e.mod,no=e.modInt,lo=e.modelDirection,so=e.modelNormalMatrix,co=e.modelPosition,mo=e.modelScale,po=e.modelViewMatrix,uo=e.modelViewPosition,go=e.modelViewProjection,ho=e.modelWorldMatrix,xo=e.modelWorldMatrixInverse,fo=e.morphReference,bo=e.mrt,wo=e.mul,vo=e.mx_aastep,So=e.mx_cell_noise_float,To=e.mx_contrast,_o=e.mx_fractal_noise_float,Vo=e.mx_fractal_noise_vec2,yo=e.mx_fractal_noise_vec3,Mo=e.mx_fractal_noise_vec4,Do=e.mx_hsvtorgb,Fo=e.mx_noise_float,Co=e.mx_noise_vec3,Io=e.mx_noise_vec4,No=e.mx_ramplr,Po=e.mx_ramptb,Ro=e.mx_rgbtohsv,Bo=e.mx_safepower,ko=e.mx_splitlr,Lo=e.mx_splittb,Ao=e.mx_srgb_texture_to_lin_rec709,Go=e.mx_transform_uv,Oo=e.mx_worley_noise_float,Wo=e.mx_worley_noise_vec2,jo=e.mx_worley_noise_vec3,Uo=e.negate,zo=e.neutralToneMapping,Eo=e.nodeArray,qo=e.nodeImmutable,Zo=e.nodeObject,Xo=e.nodeObjects,Yo=e.nodeProxy,Ho=e.normalFlat,Jo=e.normalGeometry,Ko=e.normalLocal,Qo=e.normalMap,$o=e.normalView,ei=e.normalWorld,ti=e.normalize,ri=e.not,ai=e.notEqual,oi=e.numWorkgroups,ii=e.objectDirection,ni=e.objectGroup,li=e.objectPosition,si=e.objectScale,ci=e.objectViewPosition,mi=e.objectWorldMatrix,pi=e.oneMinus,di=e.or,ui=e.orthographicDepthToViewZ,gi=e.oscSawtooth,hi=e.oscSine,xi=e.oscSquare,fi=e.oscTriangle,bi=e.output,wi=e.outputStruct,vi=e.overlay,Si=e.overloadingFn,Ti=e.parabola,_i=e.parallaxDirection,Vi=e.parallaxUV,yi=e.parameter,Mi=e.pass,Di=e.passTexture,Fi=e.pcurve,Ci=e.perspectiveDepthToViewZ,Ii=e.pmremTexture,Ni=e.pointUV,Pi=e.pointWidth,Ri=e.positionGeometry,Bi=e.positionLocal,ki=e.positionPrevious,Li=e.positionView,Ai=e.positionViewDirection,Gi=e.positionWorld,Oi=e.positionWorldDirection,Wi=e.posterize,ji=e.pow,Ui=e.pow2,zi=e.pow3,Ei=e.pow4,qi=e.property,Zi=e.radians,Xi=e.rand,Yi=e.range,Hi=e.rangeFog,Ji=e.rangeFogFactor,Ki=e.reciprocal,Qi=e.reference,$i=e.referenceBuffer,en=e.reflect,tn=e.reflectVector,rn=e.reflectView,an=e.reflector,on=e.refract,nn=e.refractVector,ln=e.refractView,sn=e.reinhardToneMapping,cn=e.remainder,mn=e.remap,pn=e.remapClamp,dn=e.renderGroup,un=e.renderOutput,gn=e.rendererReference,hn=e.rotate,xn=e.rotateUV,fn=e.roughness,bn=e.round,wn=e.rtt,vn=e.sRGBTransferEOTF,Sn=e.sRGBTransferOETF,Tn=e.sampler,_n=e.saturate,Vn=e.saturation,yn=e.screen,Mn=e.screenCoordinate,Dn=e.screenSize,Fn=e.screenUV,Cn=e.scriptable,In=e.scriptableValue,Nn=e.select,Pn=e.setCurrentStack,Rn=e.shaderStages,Bn=e.shadow,kn=e.shadowWorldPosition,Ln=e.sharedUniformGroup,An=e.sheen,Gn=e.sheenRoughness,On=e.shiftLeft,Wn=e.shiftRight,jn=e.shininess,Un=e.sign,zn=e.sin,En=e.sinc,qn=e.skinning,Zn=e.skinningReference,Xn=e.smoothstep,Yn=e.smoothstepElement,Hn=e.specularColor,Jn=e.specularF90,Kn=e.spherizeUV,Qn=e.split,$n=e.spritesheetUV,el=e.sqrt,tl=e.stack,rl=e.step,al=e.storage,ol=e.storageBarrier,il=e.storageObject,nl=e.storageTexture,ll=e.string,sl=e.sub,cl=e.subgroupIndex,ml=e.subgroupSize,pl=e.tan,dl=e.tangentGeometry,ul=e.tangentLocal,gl=e.tangentView,hl=e.tangentWorld,xl=e.temp,fl=e.texture,bl=e.texture3D,wl=e.textureBarrier,vl=e.textureBicubic,Sl=e.textureCubeUV,Tl=e.textureLoad,_l=e.textureSize,Vl=e.textureStore,yl=e.thickness,Ml=e.threshold,Dl=e.time,Fl=e.timerDelta,Cl=e.timerGlobal,Il=e.timerLocal,Nl=e.toOutputColorSpace,Pl=e.toWorkingColorSpace,Rl=e.toneMapping,Bl=e.toneMappingExposure,kl=e.toonOutlinePass,Ll=e.transformDirection,Al=e.transformNormal,Gl=e.transformNormalToView,Ol=e.transformedBentNormalView,Wl=e.transformedBitangentView,jl=e.transformedBitangentWorld,Ul=e.transformedClearcoatNormalView,zl=e.transformedNormalView,El=e.transformedNormalWorld,ql=e.transformedTangentView,Zl=e.transformedTangentWorld,Xl=e.transmission,Yl=e.transpose,Hl=e.tri,Jl=e.tri3,Kl=e.triNoise3D,Ql=e.triplanarTexture,$l=e.triplanarTextures,es=e.trunc,ts=e.tslFn,rs=e.uint,as=e.uniform,os=e.uniformArray,is=e.uniformGroup,ns=e.uniforms,ls=e.userData,ss=e.uv,cs=e.uvec2,ms=e.uvec3,ps=e.uvec4,ds=e.varying,us=e.varyingProperty,gs=e.vec2,hs=e.vec3,xs=e.vec4,fs=e.vectorComponents,bs=e.velocity,ws=e.vertexColor,vs=e.vertexIndex,Ss=e.vibrance,Ts=e.viewZToLogarithmicDepth,_s=e.viewZToOrthographicDepth,Vs=e.viewZToPerspectiveDepth,ys=e.viewport,Ms=e.viewportBottomLeft,Ds=e.viewportCoordinate,Fs=e.viewportDepthTexture,Cs=e.viewportLinearDepth,Is=e.viewportMipTexture,Ns=e.viewportResolution,Ps=e.viewportSafeUV,Rs=e.viewportSharedTexture,Bs=e.viewportSize,ks=e.viewportTexture,Ls=e.viewportTopLeft,As=e.viewportUV,Gs=e.wgsl,Os=e.wgslFn,Ws=e.workgroupArray,js=e.workgroupBarrier,Us=e.workgroupId,zs=e.workingToColorSpace,Es=e.xor;export{t as BRDF_GGX,r as BRDF_Lambert,a as BasicShadowFilter,o as Break,i as Continue,n as DFGApprox,l as D_GGX,s as Discard,c as EPSILON,m as F_Schlick,p as Fn,d as INFINITY,u as If,g as Loop,b as NodeAccess,h as NodeShaderStage,x as NodeType,f as NodeUpdateType,w as PCFShadowFilter,v as PCFSoftShadowFilter,S as PI,T as PI2,_ as Return,V as Schlick_to_F0,y as ScriptableNodeResources,M as ShaderNode,D as TBNViewMatrix,F as VSMShadowFilter,C as V_GGX_SmithCorrelated,I as abs,N as acesFilmicToneMapping,P as acos,R as add,B as addMethodChaining,k as addNodeElement,L as agxToneMapping,A as all,G as alphaT,O as and,W as anisotropy,j as anisotropyB,U as anisotropyT,z as any,E as append,q as arrayBuffer,Z as asin,X as assign,Y as atan,H as atan2,J as atomicAdd,K as atomicAnd,Q as atomicFunc,$ as atomicMax,ee as atomicMin,te as atomicOr,re as atomicStore,ae as atomicSub,oe as atomicXor,ie as attenuationColor,ne as attenuationDistance,le as attribute,se as attributeArray,ce as backgroundBlurriness,me as backgroundIntensity,pe as backgroundRotation,de as batch,ue as billboarding,ge as bitAnd,he as bitNot,xe as bitOr,fe as bitXor,be as bitangentGeometry,we as bitangentLocal,ve as bitangentView,Se as bitangentWorld,Te as bitcast,_e as blendBurn,Ve as blendColor,ye as blendDodge,Me as blendOverlay,De as blendScreen,Fe as blur,Ce as bool,Ie as buffer,Ne as bufferAttribute,Pe as bumpMap,Re as burn,Be as bvec2,ke as bvec3,Le as bvec4,Ae as bypass,Ge as cache,Oe as call,We as cameraFar,je as cameraNear,Ue as cameraNormalMatrix,ze as cameraPosition,Ee as cameraProjectionMatrix,qe as cameraProjectionMatrixInverse,Ze as cameraViewMatrix,Xe as cameraWorldMatrix,Ye as cbrt,He as cdl,Je as ceil,Ke as checker,Qe as cineonToneMapping,$e as clamp,et as clearcoat,tt as clearcoatRoughness,rt as code,at as color,ot as colorSpaceToWorking,it as colorToDirection,nt as compute,lt as cond,st as context,ct as convert,mt as convertColorSpace,pt as convertToTexture,dt as cos,ut as cross,gt as cubeTexture,ht as dFdx,xt as dFdy,ft as dashSize,bt as defaultBuildStages,wt as defaultShaderStages,vt as defined,St as degrees,Tt as deltaTime,_t as densityFog,Vt as densityFogFactor,yt as depth,Mt as depthPass,Dt as difference,Ft as diffuseColor,Ct as directPointLight,It as directionToColor,Nt as dispersion,Pt as distance,Rt as div,Bt as dodge,kt as dot,Lt as drawIndex,At as dynamicBufferAttribute,Gt as element,Ot as emissive,Wt as equal,jt as equals,Ut as equirectUV,zt as exp,Et as exp2,qt as expression,Zt as faceDirection,Xt as faceForward,Yt as float,Ht as floor,Jt as fog,Kt as fract,Qt as frameGroup,$t as frameId,er as frontFacing,tr as fwidth,rr as gain,ar as gapSize,or as getConstNodeType,ir as getCurrentStack,nr as getDirection,lr as getDistanceAttenuation,sr as getGeometryRoughness,cr as getNormalFromDepth,mr as getParallaxCorrectNormal,pr as getRoughness,dr as getScreenPosition,ur as getShIrradianceAt,gr as getTextureIndex,hr as getViewPosition,xr as glsl,fr as glslFn,br as grayscale,wr as greaterThan,vr as greaterThanEqual,Sr as hash,Tr as highpModelNormalViewMatrix,_r as highpModelViewMatrix,Vr as hue,yr as instance,Mr as instanceIndex,Dr as instancedArray,Fr as instancedBufferAttribute,Cr as instancedDynamicBufferAttribute,Ir as instancedMesh,Nr as int,Pr as inverseSqrt,Rr as invocationLocalIndex,Br as invocationSubgroupIndex,kr as ior,Lr as iridescence,Ar as iridescenceIOR,Gr as iridescenceThickness,Or as ivec2,Wr as ivec3,jr as ivec4,Ur as js,zr as label,Er as length,qr as lengthSq,Zr as lessThan,Xr as lessThanEqual,Yr as lightPosition,Hr as lightTargetDirection,Jr as lightTargetPosition,Kr as lightViewPosition,Qr as lightingContext,$r as lights,ea as linearDepth,ta as linearToneMapping,ra as localId,aa as log,oa as log2,ia as logarithmicDepthToViewZ,na as loop,la as luminance,ca as mat2,ma as mat3,pa as mat4,da as matcapUV,ua as materialAOMap,ga as materialAlphaTest,ha as materialAnisotropy,xa as materialAnisotropyVector,fa as materialAttenuationColor,ba as materialAttenuationDistance,wa as materialClearcoat,va as materialClearcoatNormal,Sa as materialClearcoatRoughness,Ta as materialColor,_a as materialDispersion,Va as materialEmissive,ya as materialIOR,Ma as materialIridescence,Da as materialIridescenceIOR,Fa as materialIridescenceThickness,Ca as materialLightMap,Ia as materialLineDashOffset,Na as materialLineDashSize,Pa as materialLineGapSize,Ra as materialLineScale,Ba as materialLineWidth,ka as materialMetalness,La as materialNormal,Aa as materialOpacity,Ga as materialPointWidth,Oa as materialReference,Wa as materialReflectivity,ja as materialRefractionRatio,Ua as materialRotation,za as materialRoughness,Ea as materialSheen,qa as materialSheenRoughness,Za as materialShininess,Xa as materialSpecular,Ya as materialSpecularColor,Ha as materialSpecularIntensity,Ja as materialSpecularStrength,Ka as materialThickness,Qa as materialTransmission,$a as max,eo as maxMipLevel,sa as mediumpModelViewMatrix,to as metalness,ro as min,ao as mix,oo as mixElement,io as mod,no as modInt,lo as modelDirection,so as modelNormalMatrix,co as modelPosition,mo as modelScale,po as modelViewMatrix,uo as modelViewPosition,go as modelViewProjection,ho as modelWorldMatrix,xo as modelWorldMatrixInverse,fo as morphReference,bo as mrt,wo as mul,vo as mx_aastep,So as mx_cell_noise_float,To as mx_contrast,_o as mx_fractal_noise_float,Vo as mx_fractal_noise_vec2,yo as mx_fractal_noise_vec3,Mo as mx_fractal_noise_vec4,Do as mx_hsvtorgb,Fo as mx_noise_float,Co as mx_noise_vec3,Io as mx_noise_vec4,No as mx_ramplr,Po as mx_ramptb,Ro as mx_rgbtohsv,Bo as mx_safepower,ko as mx_splitlr,Lo as mx_splittb,Ao as mx_srgb_texture_to_lin_rec709,Go as mx_transform_uv,Oo as mx_worley_noise_float,Wo as mx_worley_noise_vec2,jo as mx_worley_noise_vec3,Uo as negate,zo as neutralToneMapping,Eo as nodeArray,qo as nodeImmutable,Zo as nodeObject,Xo as nodeObjects,Yo as nodeProxy,Ho as normalFlat,Jo as normalGeometry,Ko as normalLocal,Qo as normalMap,$o as normalView,ei as normalWorld,ti as normalize,ri as not,ai as notEqual,oi as numWorkgroups,ii as objectDirection,ni as objectGroup,li as objectPosition,si as objectScale,ci as objectViewPosition,mi as objectWorldMatrix,pi as oneMinus,di as or,ui as orthographicDepthToViewZ,gi as oscSawtooth,hi as oscSine,xi as oscSquare,fi as oscTriangle,bi as output,wi as outputStruct,vi as overlay,Si as overloadingFn,Ti as parabola,_i as parallaxDirection,Vi as parallaxUV,yi as parameter,Mi as pass,Di as passTexture,Fi as pcurve,Ci as perspectiveDepthToViewZ,Ii as pmremTexture,Ni as pointUV,Pi as pointWidth,Ri as positionGeometry,Bi as positionLocal,ki as positionPrevious,Li as positionView,Ai as positionViewDirection,Gi as positionWorld,Oi as positionWorldDirection,Wi as posterize,ji as pow,Ui as pow2,zi as pow3,Ei as pow4,qi as property,Zi as radians,Xi as rand,Yi as range,Hi as rangeFog,Ji as rangeFogFactor,Ki as reciprocal,Qi as reference,$i as referenceBuffer,en as reflect,tn as reflectVector,rn as reflectView,an as reflector,on as refract,nn as refractVector,ln as refractView,sn as reinhardToneMapping,cn as remainder,mn as remap,pn as remapClamp,dn as renderGroup,un as renderOutput,gn as rendererReference,hn as rotate,xn as rotateUV,fn as roughness,bn as round,wn as rtt,vn as sRGBTransferEOTF,Sn as sRGBTransferOETF,Tn as sampler,_n as saturate,Vn as saturation,yn as screen,Mn as screenCoordinate,Dn as screenSize,Fn as screenUV,Cn as scriptable,In as scriptableValue,Nn as select,Pn as setCurrentStack,Rn as shaderStages,Bn as shadow,kn as shadowWorldPosition,Ln as sharedUniformGroup,An as sheen,Gn as sheenRoughness,On as shiftLeft,Wn as shiftRight,jn as shininess,Un as sign,zn as sin,En as sinc,qn as skinning,Zn as skinningReference,Xn as smoothstep,Yn as smoothstepElement,Hn as specularColor,Jn as specularF90,Kn as spherizeUV,Qn as split,$n as spritesheetUV,el as sqrt,tl as stack,rl as step,al as storage,ol as storageBarrier,il as storageObject,nl as storageTexture,ll as string,sl as sub,cl as subgroupIndex,ml as subgroupSize,pl as tan,dl as tangentGeometry,ul as tangentLocal,gl as tangentView,hl as tangentWorld,xl as temp,fl as texture,bl as texture3D,wl as textureBarrier,vl as textureBicubic,Sl as textureCubeUV,Tl as textureLoad,_l as textureSize,Vl as textureStore,yl as thickness,Ml as threshold,Dl as time,Fl as timerDelta,Cl as timerGlobal,Il as timerLocal,Nl as toOutputColorSpace,Pl as toWorkingColorSpace,Rl as toneMapping,Bl as toneMappingExposure,kl as toonOutlinePass,Ll as transformDirection,Al as transformNormal,Gl as transformNormalToView,Ol as transformedBentNormalView,Wl as transformedBitangentView,jl as transformedBitangentWorld,Ul as transformedClearcoatNormalView,zl as transformedNormalView,El as transformedNormalWorld,ql as transformedTangentView,Zl as transformedTangentWorld,Xl as transmission,Yl as transpose,Hl as tri,Jl as tri3,Kl as triNoise3D,Ql as triplanarTexture,$l as triplanarTextures,es as trunc,ts as tslFn,rs as uint,as as uniform,os as uniformArray,is as uniformGroup,ns as uniforms,ls as userData,ss as uv,cs as uvec2,ms as uvec3,ps as uvec4,ds as varying,us as varyingProperty,gs as vec2,hs as vec3,xs as vec4,fs as vectorComponents,bs as velocity,ws as vertexColor,vs as vertexIndex,Ss as vibrance,Ts as viewZToLogarithmicDepth,_s as viewZToOrthographicDepth,Vs as viewZToPerspectiveDepth,ys as viewport,Ms as viewportBottomLeft,Ds as viewportCoordinate,Fs as viewportDepthTexture,Cs as viewportLinearDepth,Is as viewportMipTexture,Ns as viewportResolution,Ps as viewportSafeUV,Rs as viewportSharedTexture,Bs as viewportSize,ks as viewportTexture,Ls as viewportTopLeft,As as viewportUV,Gs as wgsl,Os as wgslFn,Ws as workgroupArray,js as workgroupBarrier,Us as workgroupId,zs as workingToColorSpace,Es as xor};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
